title = "Super cool demo about ant colonies"
image = "demomag/ant-colony-search"

[meta]

  [meta.djibouti.cities]
  description = "Cities"
  data = 38

  [meta.djibouti.optimal_tour]
  description = "Optimal tour"
  data = 6656

  [meta.qatar.cities]
  description = "Cities"
  data = 194

  [meta.qatar.optimal_tour]
  description = "Optimal tour"
  data = 194
  
  [meta.luxembourg.cities]
  description = "Cities"
  data = 980
  
  [meta.luxembourg.optimal_tour]
  description = "Optimal tour"
  data = 11340

########################################################
#
# 'demo run'
#
########################################################

[run]
description = "This is a description of this demo, which could on and on for a couple of lines, like this and that, and all the way around"
default = "djibouti"

  [run.preconfigured.djibouti]
  description = "Find the shortest roundtrip through the cities of Djibouti"
  script = '/demo/run/djibouti.sh'
  outputs = [
    'best.dj38',
    'cmp.dj38',
    'stat.dj38',
  ]

  [run.preconfigured.qatar]
  description = "Find the shortest roundtrip through the cities of Qatar"
  script = '/demo/run/qatar.sh'
  outputs = [
    'best.qa194',
    'cmp.qa194',
    'stat.qa194',
  ]

  [run.preconfigured.luxembourg]
  description = "Find the shortest roundtrip through the cities of Luxembourg"
  script = '/demo/run/luxembourg.sh'
  outputs = [
    'best.lu980',
    'cmp.lu980',
    'stat.lu980',
  ]

  [run.examples.djibouti_elitist]
  description = "Use the Elitist Ant System algorithm to solve Djibouti"
  commandline = '--eas -i /root/data/djibouti/dj38.tsp'
  
  [run.examples.qatar_time]
  description = "Spend 20 seconds solving Qatar"
  commandline = '--time 20 -i /root/data/qatar/qa194.tsp'

  [run.examples.djibouti_ants]
  description = "Use 100 ants to solve Djibouti"
  commandline = '--ants 100 -i /root/data/djibouti/dj38.tsp'
  
  [run.examples.luxembourg_ants]
  description = "Use the Basic Ant System and allow each ant to share information with its nearest 40 neighbors to solve Luxembourg"
  commandline = '--as --nnants 40 -i /root/data/luxembourg/lu980.tsp'

########################################################
#
# 'demo run --help'
#
########################################################

[input]

  [input.tspfile]
  description = "A TSPLIB formatted file containing points and distances between them"
  options = ["--tsplibfile", "-i"]
  format = "file.tsp"
  default = "none"
  
[output]

  [output.best]
  description = "Statistics about the best (shortest) solutions found during each trial run"
  options = []
  format = "best.file"
  default = "best.file"

  [output.cmp]
  description = "Statistics about all trial runs"
  options = []
  format = "cmp.file"
  default = "cmp.file"
        
  [output.stat]
  description = "Raw statistics, see source code"
  options = []
  format = "stat.file"
  default = "stat.file"
  
[algorithms]

  [algorithms.basic]
  options = ["--as", "-u"]
  description = "Basic Ant System"
  docs = ["/root/papers/AntSystem.pdf"]
  default = "false"
  
  [algorithms.elitist]
  options = ["--eas", "-v"]
  description = "Elitist Ant System"
  docs = ["/root/papers/AntSystem.pdf"]
  default = "false"

  [algorithms.rank]
  options = ["--ras", "-w"]
  description = "Rank-based Ant System"
  docs = ["/root/papers/RankBased.pdf"]
  default = "false"

  [algorithms.colony]
  options = ["--acs", "-z"]
  description = "Ant Colony System"
  docs = ["/root/papers/AntColonySystem.pdf"]
  default = "false"
  
  [algorithms.maxmin]
  options = ["--mmas", "-x"]
  description = "MAX-MIN Ant System"
  docs = ["/root/papers/MAXMIN.pdf"]
  default = "true"

  [algorithms.bestworst]
  options = ["--bwas", "-y"]
  description = "Best-worst Ant System"
  docs = ["/root/papers/BestWorst.pdf"]
  default = "false"

[params]

  [params.tries]
  options = ["--tries", "-r"]
  description = "Number of independent trials"  
  default = "10"

  [params.tours]
  options = ["--tours", "-s"]
  description = "Number of steps in each trial"
  default = "0"

  [params.time]
  options = ["--time", "-t"]
  description = "Maximum time for each trial in seconds"
  default = "10"

  [params.seed]
  options = ["--seed"]
  description = "Seed for the random number generator"
  default = "current time"

  [params.optimum]
  options = ["--optimum", "-o"]
  description = "Stop if tour is better or equal to optimum"
  default = "1"

  [params.ants]
  options = ["--ants", "-m"]
  description = "Number of ants"
  default = "25"  

  [params.nnants]
  options = ["--nnants", "-g"]
  description = "Nearest neighbours in tour construction"
  default = "20"

  [params.alpha]
  options = ["--alpha", "-a"]
  description =  "Influence of pheromone trails"
  default = "1.0"

  [params.beta]
  options = ["--beta", "-b"]
  description = "Influence of heuristic information"
  default = "2.0"

  [params.rho]
  options = ["--rho", "-e"]
  description = "Pheromone trail evaporation"
  default = "0.5"

  [params.q0]
  options = ["--q0", "-q"]
  description = "Probability of best choice in tour construction"
  default = "0.0"

  [params.elitistants]
  options = ["--elitistants", "-c"]
  description = "Number of elitist ants"
  default = "0"

  [params.rasranks]
  options = ["--rasranks", "-f"]
  description = "Number of ranks in rank-based Ant System"
  default = "0"

  [params.localsearch]
  options = ["--localsearch", "-l"]
  description = "0: don't do local search, 1: 2-opt, 2: 2.5-opt, 3: 3-opt"
  default = "3" 

  [params.nnls]
  options = ["--nnls", "-k"]
  description = "Number of nearest neighbors for local search"
  default = "20"

  [params.dlb]
  options = ["--dlb", "-d"]
  description = "Use don't look bits in local search"
  default = "true"

  [params.quiet]
  options = ["--quiet"]
  description = "Reduce output to a minimum"
  default = "false"
  
########################################################
#
# 'demo build'
#
########################################################

[build]
default = "default"
clean = '/demo/build/clean.sh'

  [build.preconfigured.default]
  script = '/demo/build/default.sh'
  description = "make with gcc"

  [build.preconfigured.optimized]
  script = '/demo/build/optimized.sh'
  description = "make with gcc -O3"

  [build.preconfigured.debug]
  script = '/demo/build/debug.sh'
  description = "make with gcc -g"

########################################################
#
# 'demo data'
#
########################################################

[data]

  [data.preconfigured.national_tsp]
  description = "National traveling salesman problem datasets, featuring countries from around the world"
  source = "University of Waterloo"
  url = "http://www.math.uwaterloo.ca/tsp/world/countries.html"
      
  [data.preconfigured.national_tsp.extra]
  cities = "Cities"  
  optimal_tour = "Optimal tour"
    
  [data.preconfigured.national_tsp.file.djibouti]
  file = "/root/data/djibouti/dj38.tsp"
  description = "A graph representing all 38 cities in the country of Djibouti, in TSPLIB format"
  extra = ["cities", "optimal_tour"]
  cities = 38
  optimal_tour = 6656
  
  [data.preconfigured.national_tsp.file.qatar]
  file = "/root/data/qatar/qa194.tsp"
  description = "A graph representing all 194 cities in the country of Qatar, in TSPLIB format"
  extra = ["cities", "optimal_tour"]
  cities = 194
  optimal_tour = 9352

  [data.preconfigured.national_tsp.file.luxembourg]
  file = "/root/data/luxembourg/lu980.tsp"
  description = "A graph representing all 980 cities in the country of Luxembourg, in TSPLIB format"
  extra = ["cities", "optimal_tour"]
  cities = 980
  optimal_tour = 11340

########################################################
#
# 'demo source'
#
########################################################

[source]

  [source.preconfigured.acotsp]
  authors = []
  version = "1.03"
  license = 'GPLv2'
  dir = ['/root/src/acotsp']
  description = "Implements six ant colony optimization algorithmsrithms that solve traveling salesman problems"

  [source.preconfigured.acotsp.notable_files.parse]
  file = 'parse.c'
  description = "Parses commandline parameters"

  [source.preconfigured.acotsp.notable_files.init]
  file = 'InOut.c'
  description = "Initializes the ant colony"

  [source.preconfigured.acotsp.notable_files.algorithm]
  file = 'acotsp.c'
  description = "(entrypoint) Implements ant searching to solve TSP"
